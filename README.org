#+TITLE: IM Demo演示示例
#+STARTUP: inlineimages
*  简答的IM的演示示例
** 基础概念
*** 单聊
*** 群聊
** 计划
*** 协议制定
协议选择上使用protobuf的二进制协议
**** 协议说明
| 字段    | 类型  | 说明                                                 |
|---------+-------+------------------------------------------------------|
| version | INT8  | 协议版本号                                           |
| command | enum  | 顶层命令类型，CONNECT，DISCONNECT，REQUEST，RESPONSE |
| payload | bytes | 不同的协议表示不同的含义                             |

*****  登录 CONNECT
| 字段   | 类型   | 说明       |
|--------+--------+------------|
| org    | string | 组织       |
| appkey | string | 部门       |
| user   | string | 账号       |
| token  | string | 密码/token |

*****  断开 DISCONNECT
| 字段   | 类型   | 说明     |
|--------+--------+----------|
| code   | INT8   | 断开码   |
| reason | string | 断开原因 |

*****  请求 REQUEST
| 字段    | 类型   | 说明                                     |
|---------+--------+------------------------------------------|
| type    | ENUM   | 请求的具体类型， MESSAGE，CONTACT，GROUP |
| payload | bytes  | 请求的具体内容，详解见分开解释           |
| opts    | Option | 扩展信息列表                             |

扩展信息
| 字段    | 类型 | 说明         |
|---------+------+--------------|
| offline | bool | 是否保存离线 |

****** 消息 MESSAGE
| 字段    | 类型  | 说明                     |
|---------+-------+--------------------------|
| type    | ENUM  | 消息具体内容，TXT，IMAGE |
| payload | bytes | 消息的具体内容           |

******* 文本消息
| 字段    | 类型   | 说明           |
|---------+--------+----------------|
| txt     | string | 文本内容       |

******* 图片消息
| 字段 | 类型   | 说明     |
|------+--------+----------|
| url  | string | 文本内容 |

*****  相应 RESPONSE
| 字段   | 类型   | 说明     |
|--------+--------+----------|
| code   | INT8   | 请求结果 |
| reason | string | 结果说明 |

**** protobuf如下所示
#+begin_src protobuf
  syntax = "proto3";

  message Connect {
      string org = 1;
      string appkey = 2;
      string user = 3;
      string token = 4;
  }

  message Disconnect {
      int32 code = 1;
      string reason = 2;
  }

  enum Status {
      STATUS_OK = 0;
      STATUS_FAIL = 1;
  }

  message ConAck {
      Status status = 1;
      optional string reason = 2;
  }

  enum RequestType {
      MESSAGE = 0;
      CONTACT = 1;
      GROUP = 2;
  }

  message Option {
      bool offline = 1;
  }

  message Request {
      RequestType type = 1;
      bytes payload = 2;
      repeated Option opts = 3;
  }

  enum MessageType {
      TXT = 0;
      IMAGE = 1;
  }

  message MessageTxt {
      string txt = 1;
  }

  message MessageImg {
      string url = 1;
  }

  message Message {
      MessageType type = 1;
      bytes payload = 2;
  }

  message Response {
      int32 code = 1;
      string reason = 2;
  }

  message Command {
      int32 version = 1;
      optional Connect connect = 3;
      optional ConAck conack = 4;
      optional Disconnect disconnect = 5;
      optional Request request = 6;
      optional Response response = 7;
  }
#+end_src

**** protobuf具体实现

由于TCP的报文是字节流的形式，所以除了上面所示的通过pb将业务数据进行编码之后，还需要进行TCP层面的
拆包，当前均是采用在数据前添加相应的报文长度的方式。添加长度的方式一般有两种，固定长度和变长的方式。
目前为了减少数据大小，大多采用变长的方式，其中MQTT，protobuf本身的长度都是采用这种方式进行的。
https://developers.google.com/protocol-buffers/docs/encoding?hl=zh-cn#varints

**** 登录过程
#+begin_src plantuml :file login.png
@startuml
User -> IMS: Connect with UserName, Token
IMS --> User: ConAck with code，reason
@enduml
#+end_src

#+RESULTS:
[[file:login.png]]

*****  登录场景分析

|

** 后续计划
*** TODO 登录逻辑
*** TODO 发消息逻辑
*** TODO 压测登录、发消息逻辑
